AWSTemplateFormatVersion: "2010-09-09"
Description: "Create an S3 Bucket"

Resources:
    MyS3Bucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Delete
        Properties:
            BucketName: mergeddatar15
    
    GlueJobImport:
        Type: AWS::Glue::Job
        DependsOn: MyS3Bucket
        Properties:
            Name: data-importsep38
            Description: Ingests data from s3 and writes it as a parquet file to the data lake
            ExecutionClass: FLEX
            GlueVersion: 4.0
            MaxRetries: 0
            NumberOfWorkers: 6
            Role: arn:aws:iam::467280971091:role/LabRole
            Timeout: 40
            WorkerType: G.1X
            Command:
                Name: glueetl
                ScriptLocation: s3://github-scrpits/Datawarehouse_Script.py

    GlueDatabase:
        Type: AWS::Glue::Database
        Properties:
            CatalogId: !Ref AWS::AccountId
            DatabaseInput:
                Name: database65  
    
    GlueCrawler:
        Type: AWS::Glue::Crawler
        Properties:
            Name: CrawlingData64
            DatabaseName:  database64
            Targets:
                S3Targets:
                    - Path: s3://mergeddatar15/datawarehouse/
            Role: arn:aws:iam::467280971091:role/LabRole
            
            
    MyAthenaWorkGroup:
        Type: AWS::Athena::WorkGroup
        Properties:
            Name: MyWorkGroup
            Description: workgroup for Athena
            State: ENABLED
            WorkGroupConfiguration:
                BytesScannedCutoffPerQuery: 200000000
                EnforceWorkGroupConfiguration: false
                PublishCloudWatchMetricsEnabled: true
                RequesterPaysEnabled: true
                ResultConfiguration:
                    OutputLocation: s3://finalbucketgrp4/    


    StateMachine:
        Type: AWS::StepFunctions::StateMachine
        Properties:
            DefinitionString:
                Fn::Sub: |
                   {
                    "Comment": "A state machine to run Glue Job and trigger Glue Crawler",
                    "StartAt": "RunGlueJob",
                    "States": {
                    "RunGlueJob": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::glue:startJobRun.sync",
                        "Parameters": {
                              "JobName": "data-importsep38"
                        },
                        "Next": "CheckGlueJobStatus"
                    },
                    "CheckGlueJobStatus": {
                        "Type": "Choice",
                        "Choices": [
                            {
                              "Variable": "$.JobRun.JobRunState",
                              "StringEquals": "SUCCEEDED",
                              "Next": "StartCrawler"
                            }
                        ],
                        "Default": "WaitForJobCompletion"
                    },
                    "WaitForJobCompletion": {
                        "Type": "Wait",
                        "Seconds": 60,
                        "Next": "RunGlueJob"
                    },
                        "StartCrawler": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::glue:startCrawlerSync",
                            "Parameters": {
                            "CrawlerName": "CrawlingData64"
                        },
                        "End": true
                     }
                    }
                   }
        
   
       